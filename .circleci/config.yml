# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1

definitions:
  docker: &python_image
    - image: cimg/python:3.8.12
  steps:
    - restore_cache: &restore_cache
        keys:
          - v1-dependencies-{{ checksum "requirements-dev.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
    - run: &apt_get_install
        name: Install non-Python dependencies
        command: |
          sudo apt-get update
          sudo apt-get install libyaml-dev
    - run: &install_spectacles
        name: Install Spectacles
        command: |
          python3 -m venv venv --clear
          . venv/bin/activate
          pip install -U pip
          pip install -r requirements-dev.txt
          pip install .
    - save_cache: &save_cache
        paths:
          - ./venv
        key: v1-dependencies-{{ checksum "requirements-dev.txt" }}

jobs:
  unit:
    docker: *python_image
    steps:
      - checkout
      - restore_cache: *restore_cache
      - run: *apt_get_install
      - run: *install_spectacles
      - save_cache: *save_cache
      - run:
          name: Run mypy type checks
          command: |
            . venv/bin/activate
            mypy spectacles tests
      - run:
          name: Run flake8 style checks
          command: |
            . venv/bin/activate
            flake8 spectacles tests
      - run:
          name: Run black formatting checks
          command: |
            . venv/bin/activate
            black --check spectacles tests
      - run:
          name: Test for security vulnerabilities
          command: |
            . venv/bin/activate
            bandit -r spectacles
      - run:
          name: Run unit tests
          command: |
            . venv/bin/activate
            pytest tests/unit
  
  integration:
    docker: *python_image
    steps:
      - checkout
      - restore_cache: *restore_cache
      - run: *apt_get_install
      - run: *install_spectacles
      - save_cache: *save_cache
      - run:
          name: Run integration tests
          command: |
            . venv/bin/activate
            pytest tests/integration

workflows:
  version: 2
  test:
    jobs:
      - unit
      - approve:
          type: approval
          requires: [unit]
      - integration:
          requires: [approve]
