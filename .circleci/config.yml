# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1

definitions:
  docker: &python_image
    - image: cimg/python:3.9.18
  steps:
    - restore_cache: &restore_cache
        key: v1-dependencies-{{ checksum "poetry.lock" }}
    - run: &apt_get_install
        name: Install non-Python dependencies
        command: |
          sudo apt-get update
          sudo apt-get install libyaml-dev
    - run: &install_spectacles
        name: Install package dependencies
        command: |
          poetry config --no-ansi virtualenvs.in-project true
          poetry install --no-ansi --verbose
    - save_cache: &save_cache
        key: v1-dependencies-{{ checksum "poetry.lock" }}
        paths:
          - .venv

jobs:
  unit:
    docker: *python_image
    steps:
      - checkout
      - restore_cache: *restore_cache
      - run: *apt_get_install
      - run: *install_spectacles
      - save_cache: *save_cache
      - run:
          name: Run pre-commit checks
          command: poetry run --no-ansi pre-commit run --all-files
      - run:
          name: Test for security vulnerabilities
          command: poetry run --no-ansi bandit -r spectacles
      - run:
          name: Run unit tests
          command: |
            mkdir test-results
            poetry run --no-ansi pytest --verbose --junitxml=test-results/junit.xml tests/unit
      - store_test_results:
          path: test-results
  
  integration:
    docker: *python_image
    steps:
      - checkout
      - restore_cache: *restore_cache
      - run: *apt_get_install
      - run: *install_spectacles
      - save_cache: *save_cache
      - run:
          name: Run integration tests
          command: |
            mkdir test-results
            poetry run --no-ansi pytest --verbose --junitxml=test-results/junit.xml tests/integration
      - store_test_results:
          path: test-results

workflows:
  test:
    jobs:
      - unit
      - approve:
          type: approval
          requires: [unit]
      - integration:
          requires: [approve]
